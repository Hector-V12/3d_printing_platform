// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}


model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  name        String
  surname     String
  isAdmin Boolean @default(false)
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
  notificationsSent Notifications[]  @relation("sentNotifications")
  notificationsReceived Notifications[] @relation("receivedNotifications")
}

model Order {
  id              Int      @id @default(autoincrement())
  commandTitle    String   @default("default title")
  quantity        Int
  usedSoftware    String
  materialChoice  String?
  comment         String?
  fileUrl         String?
  orderDate       DateTime @default(now())
  userId          Int
  user            User     @relation(fields: [userId], references: [id])
  status          Boolean @default(false)
  validated       Boolean @default(false)
}

model Notifications {
   id              Int      @id @default(autoincrement())
   notificationTitle String
   content String
   notificationDate DateTime@default(now())
   userId            Int?      // Foreign key referencing the User model
  adminId           Int?    
  user              User?            @relation("receivedNotifications", fields: [userId], references: [id])
  admin             User?            @relation("sentNotifications", fields: [adminId], references: [id])
}